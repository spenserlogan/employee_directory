{"ast":null,"code":"var _jsxFileName = \"/Users/spenserlcambron/Desktop/FullStack Projects/employee-directory/src/components/EmployeesTable/EmployeesTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport API from \"../../Utils/API\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EmployeesTable = ({\n  filteredEmployees,\n  setFilteredEmployees\n}) => {\n  _s();\n\n  const [isAscending, setIsAscending] = useState(false);\n  useEffect(() => {\n    API.loadEmployees().then(res => res.json()).then(response => {\n      setFilteredEmployees(response.results);\n    });\n  }, []);\n\n  const sortName = () => {\n    setIsAscending(!isAscending);\n\n    if (isAscending) {\n      const array = [...filteredEmployees];\n      array.sort((a, b) => (a.name.first + \" \" + a.name.last).localeCompare(b));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"table table-bordered table-hover table-stripped text-center table-sortable\",\n    children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: filteredEmployees.filter(employee => employee.first.toUpperCase().includes(search.toUpperCase()) || employee.last.toUpperCase().includes(search.toUpperCase())).map(employee => {\n        const {\n          first,\n          last\n        } = employee.name;\n        const fullName = `${first} ${last}`;\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: employee.picture.medium,\n              alt: fullName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"align-center\",\n            children: fullName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"align-center\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: `mailto:${employee.email}`,\n              children: employee.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 53\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"align-center\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: `tel:+1${employee.phone}`,\n              children: employee.phone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 53\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 22\n          }, this)]\n        }, employee.login.uuid, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 19\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 7\n  }, this);\n};\n\n_s(EmployeesTable, \"+hhRsa9cfGSOIYYeC/3jmtW4N80=\");\n\n_c = EmployeesTable;\nexport default EmployeesTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmployeesTable\");","map":{"version":3,"sources":["/Users/spenserlcambron/Desktop/FullStack Projects/employee-directory/src/components/EmployeesTable/EmployeesTable.js"],"names":["React","useState","useEffect","API","EmployeesTable","filteredEmployees","setFilteredEmployees","isAscending","setIsAscending","loadEmployees","then","res","json","response","results","sortName","array","sort","a","b","name","first","last","localeCompare","filter","employee","toUpperCase","includes","search","map","fullName","picture","medium","email","phone","login","uuid"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,OAAO,aAAP;;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAACC,EAAAA,iBAAD;AAAoBC,EAAAA;AAApB,CAAD,KAA+C;AAAA;;AACnE,QAAM,CAACC,WAAD,EAAcC,cAAd,IAA+BP,QAAQ,CAAC,KAAD,CAA7C;AACAC,EAAAA,SAAS,CAAC,MAAM;AACbC,IAAAA,GAAG,CAACM,aAAJ,GACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEOG,QAAD,IAAc;AAACP,MAAAA,oBAAoB,CAACO,QAAQ,CAACC,OAAV,CAApB;AAAuC,KAF5D;AAGF,GAJQ,EAIP,EAJO,CAAT;;AAMA,QAAMC,QAAQ,GAAG,MAAM;AACpBP,IAAAA,cAAc,CAAC,CAACD,WAAF,CAAd;;AACA,QAAGA,WAAH,EAAgB;AACb,YAAMS,KAAK,GAAG,CAAC,GAAGX,iBAAJ,CAAd;AACAW,MAAAA,KAAK,CAACC,IAAN,CAAW,CAACC,CAAD,EAAGC,CAAH,KAAS,CAACD,CAAC,CAACE,IAAF,CAAOC,KAAP,GAAe,GAAf,GAAqBH,CAAC,CAACE,IAAF,CAAOE,IAA7B,EAAmCC,aAAnC,CAAiDJ,CAAjD,CAApB;AACF;AACH,GAND;;AAQA,sBACG;AAAO,IAAA,SAAS,EAAG,4EAAnB;AAAA,2BAqBG;AAAA,gBACId,iBAAiB,CAACmB,MAAlB,CAAyBC,QAAQ,IAAIA,QAAQ,CAACJ,KAAT,CAAeK,WAAf,GAA6BC,QAA7B,CAAsCC,MAAM,CAACF,WAAP,EAAtC,KAA+DD,QAAQ,CAACH,IAAT,CAAcI,WAAd,GAA4BC,QAA5B,CAAqCC,MAAM,CAACF,WAAP,EAArC,CAApG,EAAgKG,GAAhK,CAAoKJ,QAAQ,IAAI;AAC9K,cAAM;AAAEJ,UAAAA,KAAF;AAASC,UAAAA;AAAT,YAAkBG,QAAQ,CAACL,IAAjC;AACA,cAAMU,QAAQ,GAAI,GAAET,KAAM,IAAGC,IAAK,EAAlC;AAEA,4BACG;AAAA,kCACG;AAAA,mCACG;AAAK,cAAA,GAAG,EAAIG,QAAQ,CAACM,OAAT,CAAiBC,MAA7B;AAAqC,cAAA,GAAG,EAAIF;AAA5C;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,kBADH,eAIG;AAAI,YAAA,SAAS,EAAG,cAAhB;AAAA,sBAAgCA;AAAhC;AAAA;AAAA;AAAA;AAAA,kBAJH,eAKG;AAAI,YAAA,SAAS,EAAG,cAAhB;AAAA,mCAA+B;AAAG,cAAA,IAAI,EAAG,UAASL,QAAQ,CAACQ,KAAM,EAAlC;AAAA,wBAAsCR,QAAQ,CAACQ;AAA/C;AAAA;AAAA;AAAA;AAAA;AAA/B;AAAA;AAAA;AAAA;AAAA,kBALH,eAMG;AAAI,YAAA,SAAS,EAAG,cAAhB;AAAA,mCAA+B;AAAG,cAAA,IAAI,EAAG,SAAQR,QAAQ,CAACS,KAAM,EAAjC;AAAA,wBAAqCT,QAAQ,CAACS;AAA9C;AAAA;AAAA;AAAA;AAAA;AAA/B;AAAA;AAAA;AAAA;AAAA,kBANH;AAAA,WAAWT,QAAQ,CAACU,KAAT,CAAeC,IAA1B;AAAA;AAAA;AAAA;AAAA,gBADH;AAUF,OAdA;AADJ;AAAA;AAAA;AAAA;AAAA;AArBH;AAAA;AAAA;AAAA;AAAA,UADH;AAyCF,CAzDD;;GAAMhC,c;;KAAAA,c;AA2DN,eAAeA,cAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport API from \"../../Utils/API\"\nimport \"./style.css\";\n\nconst EmployeesTable = ({filteredEmployees, setFilteredEmployees}) => {\n   const [isAscending, setIsAscending] =useState(false)\n   useEffect(() => {\n      API.loadEmployees()\n      .then(res => res.json())\n      .then((response) => {setFilteredEmployees(response.results)})\n   },[])\n\n   const sortName = () => {\n      setIsAscending(!isAscending)\n      if(isAscending) {\n         const array = [...filteredEmployees]\n         array.sort((a,b) => (a.name.first + \" \" + a.name.last).localeCompare(b))\n      }\n   }\n\n   return(\n      <table className = \"table table-bordered table-hover table-stripped text-center table-sortable\">\n         {/* <thead>\n            <tr>\n               <th scope = \"col\">Image</th>\n               <th scope = \"col\" data-field = \"name\" data-sortable = \"true\">\n                  <div onClick = {() => props.sortBy(\"name\", \"first\", \"last\")}>\n                     Name\n                  </div>\n               </th>\n               <th scope = \"col\">\n                  <div onClick = {() => props.sortBy(\"email\")}>\n                     Email\n                  </div>\n               </th>\n               <th scope = \"col\">\n                  <div onClick = {() => props.sortBy(\"phone\")}>\n                     Phone\n                  </div>\n               </th>\n            </tr>\n         // </thead> */}\n         <tbody>\n            {filteredEmployees.filter(employee => employee.first.toUpperCase().includes(search.toUpperCase()) || employee.last.toUpperCase().includes(search.toUpperCase())).map(employee => {\n               const { first, last } = employee.name;\n               const fullName = `${first} ${last}`;\n\n               return(\n                  <tr key = {employee.login.uuid}>\n                     <td>\n                        <img src = {employee.picture.medium} alt = {fullName}/>\n                     </td>\n                     <td className = \"align-center\">{fullName}</td>\n                     <td className = \"align-center\"><a href={`mailto:${employee.email}`}>{employee.email}</a></td>\n                     <td className = \"align-center\"><a href={`tel:+1${employee.phone}`}>{employee.phone}</a></td>\n                  </tr>\n               );\n            })}\n         </tbody>\n      </table>\n   )\n}\n\nexport default EmployeesTable;\n"]},"metadata":{},"sourceType":"module"}