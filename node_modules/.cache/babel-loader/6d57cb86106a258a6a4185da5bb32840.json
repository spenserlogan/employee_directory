{"ast":null,"code":"var _jsxFileName = \"/Users/spenserlcambron/Desktop/FullStack Projects/employee-directory/src/components/Directory/Directory.js\";\nimport reactDom from \"react-dom\";\nimport React, { Component } from \"react\";\nimport EmployeesTable from \"../EmployeesTable/EmployeesTable\";\nimport API from \"../../Utils/API\";\nimport Search from \"../Search/Search\"; // import { render } from \"@testing-library/react\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Employees extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      search: \"\",\n      emplName: [],\n      filteredEmpl: [],\n      dortDirection: this.initialSortDirections\n    };\n\n    this.handleInputChange = e => {\n      const value = e.target.value;\n      this.setState({\n        search: value\n      });\n      this.filteredEmployees(value.toLowerCase().trim());\n    };\n\n    this.handleSubmitForm = e => {\n      e.preventDefault();\n    };\n\n    this.sortBy = (key, primary = 0, secondary = 0) => {\n      let sortedEmpl = this.state.filteredEmployees;\n\n      if (this.setState.sortDirections[key]) {\n        this.setState({\n          filteredEmployees: sortedEmpl.reverse(),\n          sortDirections: { ...this.initialSortDirections,\n            [key]: this.state.sortDirections[key] === \"asc\" ? \"desc\" : \"asc\"\n          }\n        });\n      } else {\n        sortedEmpl = this.state.filteredEmployees.sort((a, b) => {\n          a = a[key];\n          b = b[key];\n\n          if (primary) {\n            if (secondary && a[primary] === b[primary]) {\n              return a[secondary].localeCompare(b[secondary]);\n            }\n\n            return a[primary].localeCompare(b[primary]);\n          } else {\n            return a.localeCompare(b);\n          }\n        });\n        this.setState({\n          filteredEmployees: sortedEmpl,\n          sortDirections: { ...this.initialSortDirections,\n            [key]: \"asc\"\n          }\n        });\n      }\n    };\n\n    this.filterEmpl = data => {\n      if (data) {\n        this.setState({\n          filteredEmployees: this.state.emplName.filter(employee => {\n            return employee.name.first.toLowerCase().concat(\" \", employee.name.last.toLowerCase()).includes(data) || employee.email.includes(data) || employee.phone.includes(data) || employee.phone.replace(/[^\\w\\s]/gi, \" \").includes(data);\n          })\n        });\n      } else {\n        this.setState({\n          filteredEmployees: this.state.emplName\n        });\n      }\n    };\n  }\n\n  get initialSortDirections() {\n    return {\n      name: \"\",\n      email: \"\",\n      phone: \"\"\n    };\n  }\n\n  componentDidMount() {\n    API.loadEmployees().then(res => this.setState({\n      emplName: res.data.results,\n      filteredEmployees: res.data.results\n    })).catch(err => console.log(err));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Search, {\n        value: this.state.search,\n        handleInputChange: this.handleInputChange,\n        handleSubmitForm: this.handleSubmitForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container mt-4\",\n        children: /*#__PURE__*/_jsxDEV(EmployeesTable, {\n          state: this.state,\n          sortBy: this.sortBy,\n          filterEmpl: this.filterEmpl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default Employees;","map":{"version":3,"sources":["/Users/spenserlcambron/Desktop/FullStack Projects/employee-directory/src/components/Directory/Directory.js"],"names":["reactDom","React","Component","EmployeesTable","API","Search","Employees","state","search","emplName","filteredEmpl","dortDirection","initialSortDirections","handleInputChange","e","value","target","setState","filteredEmployees","toLowerCase","trim","handleSubmitForm","preventDefault","sortBy","key","primary","secondary","sortedEmpl","sortDirections","reverse","sort","a","b","localeCompare","filterEmpl","data","filter","employee","name","first","concat","last","includes","email","phone","replace","componentDidMount","loadEmployees","then","res","results","catch","err","console","log","render"],"mappings":"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","sourcesContent":["import reactDom from \"react-dom\";\nimport React, { Component } from \"react\";\nimport EmployeesTable from \"../EmployeesTable/EmployeesTable\";\nimport API from \"../../Utils/API\";\nimport Search from \"../Search/Search\";\n// import { render } from \"@testing-library/react\";\n\nclass Employees extends Component {\n    state = {\n        search: \"\",\n        emplName:[],\n        filteredEmpl: [],\n        dortDirection: this.initialSortDirections,\n    }\n\n    get initialSortDirections() {\n        return{\n            name: \"\",\n            email: \"\",\n            phone: \"\",\n\n        }\n    }\n\n    componentDidMount () {\n        API.loadEmployees ()\n        .then(res => \n            this.setState({\n                emplName: res.data.results,\n                filteredEmployees: res.data.results,\n            })\n        )\n        .catch(err => console.log(err));\n    }\n\n    handleInputChange = (e) => {\n        const value = e.target.value;\n        this.setState({search: value});\n        this.filteredEmployees(value.toLowerCase().trim());\n    };\n\n    handleSubmitForm = (e) => {\n        e.preventDefault();\n    };\n\n    sortBy = (key,primary = 0, secondary = 0) => {\n        let sortedEmpl = this.state.filteredEmployees;\n        if(this.setState.sortDirections[key]) {\n            this.setState({\n                filteredEmployees: sortedEmpl.reverse(),\n                sortDirections: {\n                    ...this.initialSortDirections,\n                    [key]: this.state.sortDirections[key] === \"asc\" ? \"desc\": \"asc\",\n                },\n            });\n        }else {\n            sortedEmpl = this.state.filteredEmployees.sort((a,b) => {\n                a = a[key];\n                b = b[key];\n                if (primary) {\n                    if (secondary && a[primary] === b[primary]) {\n                        return a[secondary].localeCompare(b[secondary]);\n                    }\n                    return a[primary].localeCompare(b[primary]);\n                }else {\n                    return a.localeCompare(b);\n                }\n            });\n\n            this.setState({\n                filteredEmployees: sortedEmpl,\n                sortDirections: {\n                    ...this.initialSortDirections,\n                    [key]: \"asc\",\n                }\n            });\n        }\n    }\n\n    filterEmpl = (data) => {\n        if (data) {\n            this.setState({\n                filteredEmployees: this.state.emplName.filter((employee) => {\n                    return(\n                        employee.name.first.toLowerCase().concat(\" \", employee.name.last.toLowerCase()).includes(data) ||\n                        employee.email.includes(data) ||\n                        employee.phone.includes(data) ||\n                        employee.phone.replace(/[^\\w\\s]/gi, \" \").includes(data)\n                    );\n                }),\n            });\n        }else {\n            this.setState({\n                filteredEmployees: this.state.emplName\n            });\n        }\n    }\n\n    render() {\n        return(\n            <>\n                <Search\n                    value = {this.state.search}\n                    handleInputChange = {this.handleInputChange}\n                    handleSubmitForm = {this.handleSubmitForm}\n                />\n                <div className = \"container mt-4\">\n                    <EmployeesTable\n                    state = {this.state}\n                    sortBy = {this.sortBy}\n                    filterEmpl = {this.filterEmpl}\n                />\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Employees"]},"metadata":{},"sourceType":"module"}