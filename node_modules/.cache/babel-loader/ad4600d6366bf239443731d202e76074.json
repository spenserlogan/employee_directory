{"ast":null,"code":"var _jsxFileName = \"/Users/spenserlcambron/Desktop/FullStack Projects/employee-directory/src/components/Directory/Directory.js\",\n    _s = $RefreshSig$();\n\n// import reactDom from \"react-dom\";\nimport React, { useState } from \"react\";\nimport EmployeesTable from \"../EmployeesTable/EmployeesTable\";\nimport API from \"../../Utils/API\";\nimport Search from \"../Search/Search\"; // import { render } from \"@testing-library/react\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Directory(props) {\n  _s();\n\n  const [filteredEmployees, setFilteredEmployees] = useState([]); // class Employees extends Component {\n  //     state = {\n  //         search: \"\",\n  //         emplName:[],\n  //         filteredEmpl: [],\n  //         dortDirection: this.initialSortDirections,\n  //     }\n  //     get initialSortDirections() {\n  //         return{\n  //             name: \"\",\n  //             email: \"\",\n  //             phone: \"\",\n  //         }\n  //     }\n  //     componentDidMount () {\n  //         API.loadEmployees ()\n  //         .then(res => \n  //             this.setState({\n  //                 emplName: res.data.results,\n  //                 filteredEmployees: res.data.results,\n  //             })\n  //         )\n  //         .catch(err => console.log(err));\n  //     }\n  //     handleInputChange = (e) => {\n  //         const value = e.target.value;\n  //         this.setState({search: value});\n  //         this.filteredEmployees(value.toLowerCase().trim());\n  //     };\n  //     handleSubmitForm = (e) => {\n  //         e.preventDefault();\n  //     };\n  //     sortBy = (key,primary = 0, secondary = 0) => {\n  //         let sortedEmpl = this.state.filteredEmployees;\n  //         if(this.setState.sortDirections[key]) {\n  //             this.setState({\n  //                 filteredEmployees: sortedEmpl.reverse(),\n  //                 sortDirections: {\n  //                     ...this.initialSortDirections,\n  //                     [key]: this.state.sortDirections[key] === \"asc\" ? \"desc\": \"asc\",\n  //                 },\n  //             });\n  //         }else {\n  //             sortedEmpl = this.state.filteredEmployees.sort((a,b) => {\n  //                 a = a[key];\n  //                 b = b[key];\n  //                 if (primary) {\n  //                     if (secondary && a[primary] === b[primary]) {\n  //                         return a[secondary].localeCompare(b[secondary]);\n  //                     }\n  //                     return a[primary].localeCompare(b[primary]);\n  //                 }else {\n  //                     return a.localeCompare(b);\n  //                 }\n  //             });\n  //             this.setState({\n  //                 filteredEmployees: sortedEmpl,\n  //                 sortDirections: {\n  //                     ...this.initialSortDirections,\n  //                     [key]: \"asc\",\n  //                 }\n  //             });\n  //         }\n  //     }\n  //     filterEmpl = (data) => {\n  //         if (data) {\n  //             this.setState({\n  //                 filteredEmployees: this.state.emplName.filter((employee) => {\n  //                     return(\n  //                         employee.name.first.toLowerCase().concat(\" \", employee.name.last.toLowerCase()).includes(data) ||\n  //                         employee.email.includes(data) ||\n  //                         employee.phone.includes(data) ||\n  //                         employee.phone.replace(/[^\\w\\s]/gi, \" \").includes(data)\n  //                     );\n  //                 }),\n  //             });\n  //         }else {\n  //             this.setState({\n  //                 filteredEmployees: this.state.emplName\n  //             });\n  //         }\n  //     }\n  //     render() {\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mt-4\",\n      children: /*#__PURE__*/_jsxDEV(EmployeesTable // state = {this.state}\n      // sortBy = {this.sortBy}\n      // filterEmpl = {this.filterEmpl}\n      , {\n        filteredEmployees: filteredEmployees,\n        setFilteredEmployees: setFilteredEmployees\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n} // }\n\n\n_s(Directory, \"RKk1HZC3JGtn5eixh7aJEIP7zQY=\");\n\n_c = Directory;\nexport default Directory;\n\nvar _c;\n\n$RefreshReg$(_c, \"Directory\");","map":{"version":3,"sources":["/Users/spenserlcambron/Desktop/FullStack Projects/employee-directory/src/components/Directory/Directory.js"],"names":["React","useState","EmployeesTable","API","Search","Directory","props","filteredEmployees","setFilteredEmployees"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,OAAOC,MAAP,MAAmB,kBAAnB,C,CACA;;;;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACtB,QAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA4CP,QAAQ,CAAE,EAAF,CAA1D,CADsB,CAG1B;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACQ,sBACI;AAAA,4BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAK,MAAA,SAAS,EAAG,gBAAjB;AAAA,6BACI,QAAC,cAAD,CACA;AACA;AACA;AAHA;AAIA,QAAA,iBAAiB,EAAIM,iBAJrB;AAKA,QAAA,oBAAoB,EAAIC;AALxB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA,kBADJ;AAgBH,C,CACL;;;GAhHSH,S;;KAAAA,S;AAkHT,eAAeA,SAAf","sourcesContent":["// import reactDom from \"react-dom\";\nimport React, { useState } from \"react\";\nimport EmployeesTable from \"../EmployeesTable/EmployeesTable\";\nimport API from \"../../Utils/API\";\nimport Search from \"../Search/Search\";\n// import { render } from \"@testing-library/react\";\n\nfunction Directory(props) {\n    const [filteredEmployees, setFilteredEmployees] = useState ([])\n\n// class Employees extends Component {\n//     state = {\n//         search: \"\",\n//         emplName:[],\n//         filteredEmpl: [],\n//         dortDirection: this.initialSortDirections,\n//     }\n\n//     get initialSortDirections() {\n//         return{\n//             name: \"\",\n//             email: \"\",\n//             phone: \"\",\n\n//         }\n//     }\n\n//     componentDidMount () {\n//         API.loadEmployees ()\n//         .then(res => \n//             this.setState({\n//                 emplName: res.data.results,\n//                 filteredEmployees: res.data.results,\n//             })\n//         )\n//         .catch(err => console.log(err));\n//     }\n\n//     handleInputChange = (e) => {\n//         const value = e.target.value;\n//         this.setState({search: value});\n//         this.filteredEmployees(value.toLowerCase().trim());\n//     };\n\n//     handleSubmitForm = (e) => {\n//         e.preventDefault();\n//     };\n\n//     sortBy = (key,primary = 0, secondary = 0) => {\n//         let sortedEmpl = this.state.filteredEmployees;\n//         if(this.setState.sortDirections[key]) {\n//             this.setState({\n//                 filteredEmployees: sortedEmpl.reverse(),\n//                 sortDirections: {\n//                     ...this.initialSortDirections,\n//                     [key]: this.state.sortDirections[key] === \"asc\" ? \"desc\": \"asc\",\n//                 },\n//             });\n//         }else {\n//             sortedEmpl = this.state.filteredEmployees.sort((a,b) => {\n//                 a = a[key];\n//                 b = b[key];\n//                 if (primary) {\n//                     if (secondary && a[primary] === b[primary]) {\n//                         return a[secondary].localeCompare(b[secondary]);\n//                     }\n//                     return a[primary].localeCompare(b[primary]);\n//                 }else {\n//                     return a.localeCompare(b);\n//                 }\n//             });\n\n//             this.setState({\n//                 filteredEmployees: sortedEmpl,\n//                 sortDirections: {\n//                     ...this.initialSortDirections,\n//                     [key]: \"asc\",\n//                 }\n//             });\n//         }\n//     }\n\n//     filterEmpl = (data) => {\n//         if (data) {\n//             this.setState({\n//                 filteredEmployees: this.state.emplName.filter((employee) => {\n//                     return(\n//                         employee.name.first.toLowerCase().concat(\" \", employee.name.last.toLowerCase()).includes(data) ||\n//                         employee.email.includes(data) ||\n//                         employee.phone.includes(data) ||\n//                         employee.phone.replace(/[^\\w\\s]/gi, \" \").includes(data)\n//                     );\n//                 }),\n//             });\n//         }else {\n//             this.setState({\n//                 filteredEmployees: this.state.emplName\n//             });\n//         }\n//     }\n\n//     render() {\n        return(\n            <>\n                <Search\n                   \n                />\n                <div className = \"container mt-4\">\n                    <EmployeesTable\n                    // state = {this.state}\n                    // sortBy = {this.sortBy}\n                    // filterEmpl = {this.filterEmpl}\n                    filteredEmployees = {filteredEmployees}\n                    setFilteredEmployees = {setFilteredEmployees}\n                />\n                </div>\n            </>\n        );\n    }\n// }\n\nexport default Directory"]},"metadata":{},"sourceType":"module"}